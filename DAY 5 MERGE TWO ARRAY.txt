#include <stdio.h>
#include <stdlib.h>
int main() {
    int n1, n2;
    printf("Enter the size of the first array: ");
    scanf("%d", &n1);
    int *arr1 = (int *)malloc(n1 * sizeof(int));
    if (arr1 == NULL) {
        printf("Memory allocation failed!\n");
        return 1;
    }
    printf("Enter %d elements for the first array:\n", n1);
    for (int i = 0; i < n1; i++) {
        printf("Element %d: ", i + 1);
        scanf("%d", &arr1[i]);
    }
    printf("\nEnter the size of the second array: ");
    scanf("%d", &n2);
    int *arr2 = (int *)malloc(n2 * sizeof(int));
    if (arr2 == NULL) {
        printf("Memory allocation failed!\n");
        free(arr1); // Free previously allocated memory
        return 1;
    }
    printf("Enter %d elements for the second array:\n", n2);
    for (int i = 0; i < n2; i++) {
        printf("Element %d: ", i + 1);
        scanf("%d", &arr2[i]);
    }

    int *mergedArr = (int *)malloc((n1 + n2) * sizeof(int));
    if (mergedArr == NULL) {
        printf("Memory allocation failed!\n");
        free(arr1);
        free(arr2);
        return 1;
    }
    for (int i = 0; i < n1; i++) {
        mergedArr[i] = arr1[i];
    }
    for (int i = 0; i < n2; i++) {
        mergedArr[n1 + i] = arr2[i];
    }
    printf("\nMerged Array: ");
    for (int i = 0; i < (n1 + n2); i++) {
        printf("%d ", mergedArr[i]);
    }
    printf("\n");
    free(arr1);
    free(arr2);
    free(mergedArr);

    return 0;
}